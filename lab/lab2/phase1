0000000000400ee0 <phase_1>:
  400ee0:       48 83 ec 08             sub    $0x8,%rsp
  400ee4:       be 00 24 40 00          mov    $0x402400,%esi
  400ee9:       e8 4a 04 00 00          callq  401338 <strings_not_equal>
  400eee:       85 c0                   test   %eax,%eax
  400ef0:       74 05                   je     400ef7 <phase_1+0x17>
  400ef2:       e8 43 05 00 00          callq  40143a <explode_bomb>
  400ef7:       48 83 c4 08             add    $0x8,%rsp
  400efb:       c3                      retq

x/s $esi
Border relations with Canada have never been better.

用了差不多一个星期断断续续地寻找感觉的phase_1，最主要不知道从何入手。虽然phase_1也不过10+行指令，
但最初我的出发点错了：完全依靠人工去读代码而不使用更便捷的gdb去调试和查看内存和寄存器的情况。

比方说，困扰了我好几天之久的strings_not_equal函数。现在看来，函数的名字已再清楚不过的体现了函数的意义。
而我最初还深入到函数中去读各种寄存器、各种内存，最后被一个内存地址卡住了，死活不知道内存里的值是多少，还用人工去计算。
最后终于恍然大悟，不就是放入栈中两个字符串，然后比较它们是否相等吗？

