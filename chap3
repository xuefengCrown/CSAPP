内存中，按字节编址！
sizeof(int)

# 汇编看指针

long exchange(long *xp, long y)
{
	long x = *xp;
	*xp = y;
	return x;
}

long exchange(long *xp, long y)
xp in %rdi, y in %rsi
exchange:
  movq	(%rdi), %rax    get x at xp. set as return value
  movq  %rsi, (%rdi)    store y at xp
  ret                   return

参数通过寄存器传递给函数。
C语言的“指针”就是地址。间接引用指针就是将该指针放在一个寄存器中，
然后在内存引用中使用这个寄存器。


incq(%rsp) 使栈顶8字节元素加1

subq %rax, %rdx
从%rdx中减去%rax
第一个操作数可以是立即数，寄存器或是内存位置。第二个操作数可以是寄存器或是内存位置。
